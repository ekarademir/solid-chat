syntax = "proto3";

package chat;

//
// Common
//

message FindParameter {
  oneof find_oneof {
    int32 id = 1;
    string name = 2;
    string uuid = 3;
    string username = 4;
  }
}

message FindRequest {
  FindParameter param = 1;
}

message ListRequest {
  int32 start = 1;
  int32 count = 2;
}

message FindWithTenantRequest {
  string tenant_name = 1;
  FindParameter param = 2;
}

message ListWithTenantRequest {
  string tenant_name = 1;
  int32 start = 2;
  int32 count = 3;
}

message BasicAuthenticationRequest {
  string username = 1;
  string password = 2;
  optional string tenant_name = 3;
}

message BasicAuthenticationResponse {
  string session_token = 1;
  string session_state = 2;
}

service Authentication {
  rpc BasicAuthentication(BasicAuthenticationRequest) returns (BasicAuthenticationResponse);
}

//
// /Common
//

//
// Tenants
//

message Tenant {
  int32 id = 1;
  string name = 2;
}

message TenantResponse {
  Tenant tenant = 1;
}

service Tenants {
  rpc Create(Tenant) returns (TenantResponse);
  rpc List(ListRequest) returns (stream Tenant);
  rpc Delete(FindRequest) returns (TenantResponse);
}

//
// /Tenants
//

//
// Users
//
service UsersAdmin {
  rpc Create(User) returns (UserAdminResponse);
  rpc List(ListWithTenantRequest) returns (stream User);
  rpc Delete(FindWithTenantRequest) returns (UserAdminResponse);
  rpc Update(User) returns (UserAdminResponse);
  rpc SetPassword(UserPassword) returns (UserAdminResponse);
}

enum UserKind {
  VISITOR = 0;
  INVITEE = 1;
  REGISTERED = 2;
}

message User {
  string id = 1;
  string username = 2;
  UserKind kind = 3;
  optional string fullname = 4;
  string tenant_name = 5;
}

message UserAdminResponse {
  User user = 1;
}

message UserPassword {
  string username = 1;
  string password = 2;
  string tenant_name = 3;
}

//
// /Users
//